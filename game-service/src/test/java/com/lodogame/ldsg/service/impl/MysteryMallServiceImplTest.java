/**
 * This class has been generated by Fast Code Eclipse Plugin 
 * For more information please go to http://fast-code.sourceforge.net/
 * @author : jacky
 * Created : 06/08/2013
 */

package com.lodogame.ldsg.service.impl;

import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.apache.commons.lang.math.RandomUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.testng.AbstractTestNGSpringContextTests;
import org.testng.annotations.Test;

import com.lodogame.game.dao.MysteryGroupRateDao;
import com.lodogame.game.dao.MysteryMallDropDao;
import com.lodogame.ldsg.constants.MysteryMallType;
import com.lodogame.ldsg.constants.MysteryRefreshType;
import com.lodogame.ldsg.helper.RollHalper;
import com.lodogame.model.MysteryGroupRate;
import com.lodogame.model.MysteryMallDrop;
import com.lodogame.model.UserMysteryMallDetail;

@ContextConfiguration(locations = { "classpath:applicationContext-test.xml" })
public class MysteryMallServiceImplTest extends AbstractTestNGSpringContextTests {

	@Autowired
	private MysteryGroupRateDao mysteryGroupRateDao;

	@Autowired
	private MysteryMallDropDao mysteryMallDropDao;

	/**
	 * 
	 * @see com.lodogame.ldsg.service.HeroService#addUserHero(String,String,int,int)
	 */
	@Test
	public void test() throws Exception {

		int mallType = MysteryMallType.ONLY_ONY;
		int type = MysteryRefreshType.NORMAL;
		String userId = "";
		Date now = new Date();

		List<UserMysteryMallDetail> userMysteryMallDetailList = new ArrayList<UserMysteryMallDetail>();
		List<MysteryGroupRate> mysteryGroupRateList = mysteryGroupRateDao.getList(mallType, type);

		FileOutputStream out = null;

		try {

			out = new FileOutputStream(new File("/data/data.csv"));

			for (int j = 0; j < 100000; j++) {
				for (int i = 0; i < 5; i++) {
					// 获取掉落哪组
					MysteryGroupRate mysteryGroupRate = (MysteryGroupRate) RollHalper.roll(mysteryGroupRateList);
					List<MysteryMallDrop> mysteryMallDropList = mysteryMallDropDao.getList(mallType, type, mysteryGroupRate.getGroupId());
					MysteryMallDrop mysteryMallDrop = (MysteryMallDrop) RollHalper.roll(mysteryMallDropList);

					UserMysteryMallDetail userMysteryMallDetail = new UserMysteryMallDetail();
					userMysteryMallDetail.setUserId(userId);
					userMysteryMallDetail.setDropId(mysteryMallDrop.getId());
					userMysteryMallDetail.setFlag(0);
					userMysteryMallDetail.setMallType(mallType);
					int amount = (int) (mysteryMallDrop.getAmount() * ((95 + RandomUtils.nextInt(10)) / 100.0));
					userMysteryMallDetail.setAmount(amount);
					userMysteryMallDetail.setCreatedTime(now);
					userMysteryMallDetailList.add(userMysteryMallDetail);

					String s = mysteryMallDrop.getToolType() + "," + mysteryMallDrop.getToolId() + "," + mysteryMallDrop.getToolNum() + "," + amount + "\r\n";

					out.write(s.getBytes());
				}
			}
		} finally {
			out.close();
		}

	}

}
